package cz.airbank.cucumber.reports.dao.entity;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.DBRef;
import org.springframework.data.mongodb.core.mapping.Document;

/**
 * Represent one build run with possible multiple test suite runs.
 * Mapped to MongoDB collection called "build_run".
 *
 * @author David Passler
 * @author Vaclav Stengl
 */
@Document(collection = "build_run")
public class BuildRun implements Serializable {

    private static final long serialVersionUID = 1084709378287817932L;

    @Id
    private String id;
    private DaoBuildRunMetadata metadata;
    @DBRef(lazy = true)
    private List<TestSuiteExecution> testSuites;

    /**
     * Unique ID that identifies the build. Is generated by {@link org.springframework.data.mongodb.core.convert.MappingMongoConverter}
     * and unique globally in database. As value {@link org.bson.types.ObjectId} is assigned.
     *
     * @see org.bson.types.ObjectId
     * @see org.springframework.data.mongodb.core.convert.MappingMongoConverter
     */
    public String getId() {
        return id;
    }

    /**
     * Metadata about build run
     */
    public DaoBuildRunMetadata getMetadata() {
        return metadata;
    }

    public void setMetadata(DaoBuildRunMetadata metadata) {
        this.metadata = metadata;
    }

    /**
     * All test suites inside build run.
     * Each suite represent one group of cucumber test run together to test specific part of business functionality.
     * Suits can even have same feature files executed with different parameters.
     */
    public List<TestSuiteExecution> getTestSuites() {
        if (testSuites == null) {
            testSuites = new ArrayList<>();
        }

        return testSuites;
    }

    public void setTestSuites(List<TestSuiteExecution> testSuites) {
        this.testSuites = testSuites;
    }

    @Override
    public String toString() {
        return "BuildRun{" +
                "id='" + id + '\'' +
                ", metadata=" + metadata +
                ", testSuites=" + testSuites +
                '}';
    }
}
